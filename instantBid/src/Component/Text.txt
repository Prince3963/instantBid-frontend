import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { useNavigate } from 'react-router-dom';

const Profile = () => {
  const [profileData, setProfileData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const navigate = useNavigate();

  useEffect(() => {
    const token = localStorage.getItem('jwtToken'); // Token check

    if (!token) {
      setError('No token found. Please log in.');
      setLoading(false);
      navigate('/login'); // Redirect to login if token is not found
      return;
    }

    const fetchProfileData = async () => {
      try {
        const response = await axios.get('https://localhost:7119/api/Users/GetUserById', {
          headers: {
            Authorization: `Bearer ${token}` // Sending token in Authorization header
          }
        });

        // Logging the full response to debug
        console.log("API Response:", response);

        // Access profile data directly from response.data
        if (response && response.data) {
          setProfileData(response.data); // Store profile data
        } else {
          setError('No profile data found');
        }

        setLoading(false); // Set loading to false once data is fetched
      } catch (err) {
        console.error("API Call Error:", err); // Log error to console
        setError('Failed to fetch profile data');
        setLoading(false);
      }
    };

    fetchProfileData(); // Call the function to fetch profile data
  }, [navigate]); // Empty dependency array to run only once when the component mounts

  if (loading) {
    return <div>Loading...</div>; // Show loading message while fetching
  }

  if (error) {
    return <div>{error}</div>; // Show error message if there is an issue
  }

  return (
    <div className="profile-container">
      <h2 className="text-center text-3xl font-semibold">Profile</h2>
      {profileData ? (
        <div className="profile-details">
          <p><strong>Name:</strong> {profileData.name}</p>
          <p><strong>Email:</strong> {profileData.email}</p>
          <p><strong>Date of Birth:</strong> {profileData.dateOfBirth}</p>
          <p><strong>Address:</strong> {profileData.address}</p>
          <p><strong>Account Balance:</strong> ${profileData.accountBalance}</p>
          {profileData.profileImage && (
            <img src={profileData.profileImage} alt="Profile" className="profile-image" />
          )}
        </div>
      ) : (
        <p>No profile data available</p> // Display if no data found
      )}
    </div>
  );
};

export default Profile;
